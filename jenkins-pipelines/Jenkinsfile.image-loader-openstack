library identifier: "kubic-jenkins-library@master", retriever: modernSCM(
    [$class: 'GitSCMSource',
    remote: 'https://github.com/suse/caasp-jenkins-library.git',
    credentialsId: 'github-token'])

// This pipeline runs as a regular job to download images and upload them into OpenStack

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '31', daysToKeepStr: '31')),
    disableConcurrentBuilds(),
    pipelineTriggers([
        [$class: 'org.jenkinsci.plugins.parameterizedscheduler.ParameterizedTimerTrigger',
            parameterizedSpecification: '@midnight % CHANNEL=devel\n@midnight % CHANNEL=devel'
        ]
    ])
])

node('leap15.0') {
    timeout(240){
        stage('Preparation') {
            cleanWs()
        }

        stage('Retrieve Code') {
            cloneKubicRepo(gitBase: "https://github.com/kubic-project", branch: env.BRANCH_NAME, credentialsId: "github-token", repo: "automation")
        }

        for (CHANNEL in ['devel', 'staging_a', 'staging_b', 'product']) {
            stage('Fetch Image') {
                dir('automation/misc-tools') {
                    withCredentials([
                        string(credentialsId: 'caasp-proxy-host', variable: 'CAASP_PROXY'),
                        string(credentialsId: 'caasp-location', variable: 'CAASP_LOCATION')]) {
                        sh(script: "./download-image --location ${CAASP_LOCATION} --proxy ${CAASP_PROXY} --type openstack channel://${CHANNEL}")
                    }
                }
            }

            stage('Upload Image') {
                dir('automation/misc-tools') {
                    withCredentials([file(credentialsId: 'ecp-cloud-shared', variable: 'OPENRC')]) {
                        sh(script: "./upload-image-openstack.sh ${OPENRC} ${CHANNEL}")
                    }
                }
            }
        }
    }
}
